openapi: 3.1.0
x-stoplight:
  id: 956lu7dld0uqf
info:
  title: sharePos-api
  version: '1.0'
servers:
  - url: 'https://share-pos.herokuapp.com/api/v1'
paths:
  /auth:
    post:
      summary: ''
      operationId: post-auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          allow_password_change:
                            type: boolean
                          created_at:
                            type: string
                          email:
                            type: string
                          id:
                            type: integer
                          provider:
                            type: string
                          uid:
                            type: string
                          updated_at:
                            type: string
                          username:
                            type: string
                      status:
                        type: string
        '422':
          description: |-
            Unprocessable Entity (WebDAV)
            bodyに空きがあるか、emailが同じ
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              '':
                                type: string
                          errors:
                            type: array
                            items:
                              type: string
                          status:
                            type: string
                          success:
                            type: boolean
                      status:
                        type: integer
                      statusText:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  example: unique
                password:
                  type: string
              required:
                - username
                - email
                - password
      description: ユーザー作成
    put:
      summary: ''
      operationId: put-auth
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      allow_password_change:
                        type: boolean
                      created_at:
                        type: string
                      email:
                        type: string
                      id:
                        type: integer
                      provider:
                        type: string
                      uid:
                        type: string
                      updated_at:
                        type: string
                      username:
                        type: string
                  status:
                    type: string
        '404':
          description: |-
            Not Found
            ログインしていない(headersが無い)
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                          status:
                            type: string
                          success:
                            type: boolean
        '422':
          description: |-
            Unprocessable Entity (WebDAV)
            bodyが空
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                          status:
                            type: string
                          success:
                            type: boolean
      description: 'ユーザー更新 (username, email, password を変えることが出来る)'
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
    delete:
      summary: ''
      operationId: delete-auth
      responses:
        '200':
          description: |-
            ユーザー削除成功
            (一度でも投稿をしたことがあると削除に失敗する。削除するユーザーの投稿も消せばユーザー削除出来るけど、やるつもりはない)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '404':
          description: |-
            Not Found
            ログインしていない(headersが適切でない)
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                          status:
                            type: string
                          success:
                            type: boolean
                      status:
                        type: integer
                      statusText:
                        type: string
      description: ユーザー削除
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
  /auth/sigin_in:
    post:
      summary: ''
      operationId: post-auth-sigin_in
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          'allow_password_change: false':
                            type: boolean
                          email:
                            type: string
                          id:
                            type: integer
                          provider:
                            type: string
                          uid:
                            type: string
                          username:
                            type: string
                  headers:
                    type: object
                    properties:
                      access-token:
                        type: string
                      client:
                        type: string
                      expiry:
                        type: string
                      token-type:
                        type: string
                      uid:
                        type: string
                  status:
                    type: integer
                  statusText:
                    type: string
        '401':
          description: |-
            Unauthorized
            bodyが正しくない
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                          success:
                            type: boolean
                      status:
                        type: integer
                      statusText:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      description: ユーザーログイン
  /users:
    get:
      summary: ''
      operationId: get-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
                  message:
                    type: string
              examples:
                example-2:
                  value: {}
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
            text/html:
              schema:
                type: object
                properties: {}
            text/plain:
              schema:
                type: object
                properties: {}
            application/EDI-X12:
              schema:
                type: object
                properties: {}
            application/EDIFACT:
              schema: {}
            application/atom+xml:
              schema:
                type: object
                properties: {}
            application/font-woff:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
                  message:
                    type: string
          headers: {}
        '401':
          description: ログインしていない
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '':
          content:
            application/json:
              schema:
                type: object
                properties: {}
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
      description: 全てのユーザーのnameを返す
    parameters: []
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      posts:
                        type: array
                        items:
                          type: object
                          properties:
                            comment:
                              type: string
                            created_at:
                              type: string
                            evaluation:
                              type: integer
                            id:
                              type: integer
                            published:
                              type: boolean
                            updated_at:
                              type: string
                            url:
                              type: string
                            user_id:
                              type: string
                      user:
                        type: string
                  message:
                    type: string
        '401':
          description: |-
            Unauthorized
            ログインしていない
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: ユーザーidに合う、ユーザー名とそのユーザーの投稿を取得
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"access-token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
  /posts:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        comment:
                          type: string
                        created_at:
                          type: string
                        evaluation:
                          type: integer
                        id:
                          type: integer
                        published:
                          type: boolean
                        updated_at:
                          type: string
                        url:
                          type: string
                        user_id:
                          type: string
                  message:
                    type: string
      operationId: get-posts
      description: 公開している全ての投稿を取得
      parameters: []
    post:
      summary: ''
      operationId: post-posts
      responses:
        '200':
          description: OK
        '400':
          description: |-
            Bad Request
            データが足りない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      status:
                        type: integer
                      statusText:
                        type: string
        '401':
          description: ログインしていない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                      status:
                        type: integer
                      statusText:
                        type: string
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"access-token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      description: 記事を投稿(ログイン必要)
    put:
      summary: ''
      operationId: put-posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comment:
                        type: string
                      created_at:
                        type: string
                      evaluation:
                        type: integer
                      id:
                        type: integer
                      published:
                        type: boolean
                      updated_at:
                        type: string
                      url:
                        type: string
                      user_id:
                        type: string
                  message:
                    type: string
        '400':
          description: |-
            Bad Request
            データが足りない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      status:
                        type: integer
                      statusText:
                        type: string
        '401':
          description: |-
            Unauthorized
            ログインしていない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type:
                              - string
                              - array
                            items:
                              type: string
                      status:
                        type: integer
                      statusText:
                        type: string
        '403':
          description: |-
            Forbidden
            自分の投稿でない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                      status:
                        type: integer
                      statusText:
                        type: string
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"access-token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    comment:
                      type: string
                    url:
                      type: string
                    published:
                      type: boolean
                    evaluation:
                      type: integer
        description: ''
      description: 記事を更新(ログイン必要)
    delete:
      summary: ''
      operationId: delete-posts
      responses:
        '200':
          description: OK
        '401':
          description: |-
            Unauthorized
            ログインしていない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                      status:
                        type: integer
                      statusText:
                        type: string
        '403':
          description: |-
            Forbidden
            自分の投稿でない
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          message:
                            type: string
                      status:
                        type: integer
                      statusText:
                        type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      status:
                        type: integer
                      statusText:
                        type: string
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"access-token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
      description: 記事を削除(ログイン必要)
  /posts/mypost:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        comment:
                          type: string
                        created_at:
                          type: string
                        evaluation:
                          type: integer
                        id:
                          type: integer
                        published:
                          type: boolean
                        updated_at:
                          type: string
                        url:
                          type: string
                        user_id:
                          type: string
                  message:
                    type: string
        '401':
          description: ログインしていない
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  name:
                    type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: string
                      status:
                        type: integer
                      statusText:
                        type: string
      operationId: get-posts-mypost
      parameters:
        - schema:
            type: string
          in: header
          name: '"content-type"'
          description: '"application/json"'
        - schema:
            type: string
          in: header
          name: '"access-token"'
          description: '"access-token"'
        - schema:
            type: string
          in: header
          name: '"client"'
          description: '"client"'
        - schema:
            type: string
          in: header
          name: '"uid"'
          description: '"uid"'
        - schema:
            type: string
          in: header
          name: '"expiry"'
          description: '"expiry"'
      description: ''
  '/posts/{postId}':
    parameters:
      - schema:
          type: string
        name: postId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comment:
                        type: string
                      created_at:
                        type: string
                      evaluation:
                        type: integer
                      id:
                        type: integer
                      published:
                        type: boolean
                      updated_at:
                        type: string
                      url:
                        type: string
                      user_id:
                        type: integer
                  message:
                    type: string
        '404':
          description: Not Found
      operationId: get-posts-postId
      description: |-
        post.idに合う投稿を取得
        他人の非公開の投稿は取得せず、自分の投稿なら非公開でも取得する
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        username:
          type: string
        email:
          type: string
      required:
        - id
        - username
    Post:
      title: Post
      x-stoplight:
        id: 14jcckakex25k
      type: object
      properties:
        id:
          type: string
        comment:
          type: string
        url:
          type: string
        published:
          type: boolean
        evaluation:
          type: string
        updated_at:
          type: string
        created_at:
          type: string
        user_id:
          type: number
